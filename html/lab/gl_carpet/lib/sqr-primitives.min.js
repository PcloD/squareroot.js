SQR.Primitives.createCube=function(e,r,t,a){e=e||1,r=r||1,t=t||1,a=a||{};var o=new SQR.Mesh,n=o.V(e*-.5,.5*r,.5*t),i=o.V(.5*e,.5*r,.5*t),s=o.V(e*-.5,r*-.5,.5*t),u=o.V(.5*e,r*-.5,.5*t),l=o.V(e*-.5,.5*r,t*-.5),c=o.V(.5*e,.5*r,t*-.5),f=o.V(e*-.5,r*-.5,t*-.5),v=o.V(.5*e,r*-.5,t*-.5),p=o.T(0,1),d=o.T(1,1),h=o.T(0,0),m=o.T(1,0);return o.F(n,i,s,u).T(p,d,h,m),o.F(c,l,v,f).T(p,d,h,m),o.F(l,n,f,s).T(p,d,h,m),o.F(i,c,u,v).T(p,d,h,m),o.F(l,c,n,i).T(p,d,h,m),o.F(s,u,f,v).T(p,d,h,m),o.calculateNormals(a.smooth),a.flip&&o.flip(),o.update()},SQR.Primitives.createCylinder=function(e,r,t,a){a=a||{};var o,n,i,s,u,l,c=[],f=function(e,r,t,a,o,n,i,s){var u=(new SQR.Face).setPosition(e,r,t,a).setUV(o,n,i,s);c.push(u)};o=[],n=[],i=[],s=[];for(var v=0;t>v;v++){var p=new SQR.V3,d=new SQR.V3,h=new SQR.V2,m=new SQR.V2,S=Math.cos(v/t*SQR.TWOPI)*r,Q=Math.sin(v/t*SQR.TWOPI)*r;a.vertical?(p.set(Q,e*-.5,S),d.set(Q,.5*e,S)):(p.set(e*-.5,S,Q),d.set(.5*e,S,Q)),h.set(v/t,0),m.set(v/t,1),a.noCaps||(a.vertical?(u=new SQR.V3(0,e*-.5,0),l=new SQR.V3(0,.5*e,0)):(u=new SQR.V3(e*-.5,0,0),l=new SQR.V3(.5*e,0,0))),o.push(p),n.push(d),i.push(h),s.push(m),a.insideFaces&&(p._inside=p.clone(),d._inside=d.clone())}for(var v=0;t>v;v++){var R=o[v],y=n[v],V=i[v],g=s[v],w=(v+1)%t,b=o[w],F=n[w],P=i[w],x=s[w];if(a.heightSegments=a.heightSegments||a.hs||0,a.heightSegments)for(var M=(new SQR.V3).sub(y,R),N=(new SQR.V3).sub(F,b),T=(new SQR.V3).copyFrom(R),_=(new SQR.V3).copyFrom(b),B=new SQR.V3,U=new SQR.V3,w=a.heightSegments,z=0;w+1>z;z++)B.copyFrom(M).mul(1/w*z).add(R,B),U.copyFrom(N).mul(1/w*z).add(b,U),f(T.clone(),B.clone(),_.clone(),U.clone(),V,g,P,x),T.copyFrom(B),_.copyFrom(U);else f(R,y,b,F,V,g,P,x),a.noCaps&&a.insideFaces&&f(R._inside,b._inside,y._inside,F._inside,V,g,P,x);a.noCaps||(f(R,b,u,null,g,x,P),f(F,y,l,null,x,g,P))}var p,I=a.layout||{aPosition:3,aNormal:3,aUV:2},C=SQR.Buffer().layout(I,6*c.length),k=0;return c.forEach(function(e){k+=e.calculateNormal().toBuffer(C,k)}),C},SQR.Extrude=function(){var e={};e.buffer=SQR.Buffer();var r,t,a,o,n,i,s,u=[],l=[];e.setPaths=function(n,i,s,u){return r=n,t=n.length,a=i,o=s||10,c(u),e},e.makeCaps=function(){return e};var c=function(r){u.length=0,l.length=0,r=r||SQR.v3n3();for(var a=0;o>a;a++)for(var n=0;t>n;n++){var i=new SQR.V3;u.push(i)}for(var a=0;o-1>a;a++)for(var n=0;t>n;n++){var s=a*t+n,c=t-1>n?s+1:a*t,f=(a+1)*t+n,v=t-1>n?f+1:(a+1)*t,p=(new SQR.Face).setPosition(u[s],u[v],u[c]),d=(new SQR.Face).setPosition(u[s],u[f],u[v]);l.push(p,d)}e.buffer.layout(r,3*l.length)},f=function(s,c){for(var f=0;o>f;f++)for(var v=f/(o-1),p=i+v*n,d=a.matrixAt(p),h=0;t>h;h++){var m=u[f*t+h];m.copyFrom(r[h]),s&&s(v,m,e),d.transformVector(m),c&&c(v,m,e)}for(var S=0,f=0,Q=l.length;Q>f;f++)S+=l[f].calculateNormal().toBuffer(e.buffer,S,!1,!0)};return e.update=function(r,t,a,o){return i=r||0,s=t||1,n=s-i,f(a,o),e.buffer.update(),e},e},SQR.Face=function(){return this instanceof SQR.Face?void 0:new SQR.Face},SQR.Face.prototype.setPosition=function(e,r,t,a){var o=this;return o.a=e||new SQR.V3,o.b=r||new SQR.V3,o.c=t||new SQR.V3,o.d=a,o},SQR.Face.prototype.setIndex=function(e,r,t,a,o){var n=this;return n.indexed=!0,n.ia=r,n.ib=t,n.ic=a,n.id=o,n.vertexArray=e,n},SQR.Face.prototype.flip=function(){var e=this,r=e.b;e.b=e.c,e.c=r},SQR.Face.prototype.setNormal=function(e){return this.normal=e,this},SQR.Face.prototype.setUV=function(e,r,t,a){var o=this;return o.uva=e,o.uvb=r,o.uvc=t,o.uvd=a,o},SQR.Face.prototype.setColor=function(e,r,t,a){var o=this;return o.ca=e,o.cb=r,o.cc=t,o.cd=a,o},SQR.Face.prototype.calculateNormal=function(){var e=this,r=SQR.V3.__tv1,t=SQR.V3.__tv2,a=e.vertexArray;return e.normal=e.normal||new SQR.V3,e.indexed?(r.sub(a[e.ia],a[e.ib]),r.isZero()&&r.sub(a[e.ia],a[e.id]),t.sub(a[e.ic],a[e.ia])):(r.sub(e.a,e.b),r.isZero()&&r.sub(e.a,e.d),t.sub(e.c,e.a)),e.normal.cross(r,t),e},SQR.Face.prototype.v=SQR.Face.prototype.setPosition,SQR.Face.prototype.i=SQR.Face.prototype.setIndex,SQR.Face.prototype.n=SQR.Face.prototype.setNormal,SQR.Face.prototype.uv=SQR.Face.prototype.setUV,SQR.Face.prototype.cl=SQR.Face.prototype.setColor,SQR.Face.prototype.cn=SQR.Face.prototype.calculateNormal,SQR.Face.prototype.addNormalToVertices=function(){var e=this,r=e.vertexArray,t=e.indexed?r[e.ia]:e.a,a=e.indexed?r[e.ib]:e.b,o=e.indexed?r[e.ic]:e.c,n=e.indexed?r[e.id]:e.d;return t.addNormal(e.normal),a.addNormal(e.normal),o.addNormal(e.normal),n&&n.addNormal(e.normal),e},SQR.Face.prototype.toBuffer=function(e,r,t,a){var o=this,n="aPosition",i="aNormal",s="aUV",u=r;if(e.attributes[n]&&(e.set(n,u+0,o.a).set(n,u+1,o.b).set(n,u+2,o.c),o.d&&e.set(n,u+3,o.c).set(n,u+4,o.b).set(n,u+5,o.d)),e.attributes[i]&&(o.normal||t)){var l=t,c=o.normal;a&&!l&&o.normal.norm(),e.set(i,u+0,l?o.a.normal:c).set(i,u+1,l?o.b.normal:c).set(i,u+2,l?o.c.normal:c),o.d&&e.set(i,u+3,l?o.c.normal:c).set(i,u+4,l?o.b.normal:c).set(i,u+5,l?o.d.normal:c)}return e.attributes[s]&&o.uva&&(e.set(s,u+0,o.uva).set(s,u+1,o.uvb).set(s,u+2,o.uvc),o.d&&e.set(s,u+3,o.uvc).set(s,u+4,o.uvb).set(s,u+5,o.uvd)),o.d?6:3},SQR.Primitives.createIcosphere=function(e,r,t){var a=[],o=[],n=[],i=0;t=t||{};var s=[[1,0,0,1],[0,1,0,2],[0,0,1,3],[1,1,0,4],[0,1,1,5]],u=new SQR.V3,l=(new SQR.V3(0,1,0),new SQR.V3(0,0,1),function(e){var r,t;return u.copyFrom(e),u.norm(),r=1-(.5+Math.atan2(u.z,u.x)/SQR.TWOPI),t=1-(.5-Math.asin(u.y)/Math.PI),new SQR.V2(r,t)}),c=function(e,r,t,o,n,i){var s=l(e),u=l(r),c=l(t),f=(new SQR.Face).setPosition(e,r,t).setUV(s,u,c).setColor(o,n,i);a.push(f)},f=function(r,t){for(var a=o.length,n=0;a>n;n++){var i=o[n],s=i.__v1==r&&i.__v2==t,u=i.__v2==r&&i.__v1==t;if(s||u)return i}var l=new SQR.V3;return l.sub(r,t).mul(.5).add(l,t).norm().mul(e),l.__v1=r,l.__v2=t,o.push(l),l.normal=l.clone(),l},v=function(){n[i]={};var e=n[i];e.faces=a,e.vectors=o,a=[];for(var r=e.faces.length,t=0;r>t;t++){var u=e.faces[t],l=f(u.a,u.b),v=f(u.a,u.c),p=f(u.b,u.c),d=s[i+1];c(u.a,l,v,u.ca,d,d),c(u.b,p,l,u.cb,d,d),c(u.c,v,p,u.cc,d,d),c(l,p,v,d,d,d)}i++},p=e,d=.5*(1+Math.sqrt(5))*p,h=function(r,a,n){var i=new SQR.V3(r,a,n).norm();i.normal=i.clone(),t.reverseNormals&&i.normal.neg(),i.mul(e),o.push(i)},m=function(e,r,t){var a=s[0];c(o[e],o[t],o[r],a,a,a)};for(h(-p,d,0),h(p,d,0),h(-p,-d,0),h(p,-d,0),h(0,-p,d),h(0,p,d),h(0,-p,-d),h(0,p,-d),h(d,0,-p),h(d,0,p),h(-d,0,-p),h(-d,0,p),m(0,11,5),m(0,5,1),m(0,1,7),m(0,7,10),m(0,10,11),m(1,5,9),m(5,11,4),m(11,10,2),m(10,7,6),m(7,1,8),m(3,9,4),m(3,4,2),m(3,2,6),m(3,6,8),m(3,8,9),m(4,9,5),m(2,4,11),m(6,2,10),m(8,6,7),m(9,8,1);r-->0;)v();var d,S=SQR.Buffer().layout({aPosition:3,aNormal:3,aUV:2},3*a.length),Q=0;return a.forEach(function(e){t.flatShading&&e.calculateNormal(),Q+=e.toBuffer(S,Q,!t.flatShading)}),S},SQR.Mesh=function(){if(!(this instanceof SQR.Mesh))return new SQR.Mesh;var e=this;e.polys=[],e.vertices=[],e.uvs=[],e.size=0,e.addVertex=function(r,t,a){var o=new SQR.Vertex(r,t,a);return e.vertices.push(o),e.vertices.length-1},e.addUV=function(r,t){var t=new SQR.V2(r,t);return e.uvs.push(t),e.uvs.length-1},e.addFace=function(){var r=new SQR.Poly(e);return r.V.apply(r,arguments),e.polys.push(r),e.size+=r.triangles.length,r},e.calculateNormals=function(r){e.smooth=r;for(var t=0,a=e.polys.length;a>t;t++)e.polys[t].calculateNormal();if(e.smooth)for(var t=0,a=e.vertices.length;a>t;t++)e.vertices[t].polys&&e.vertices[t].calculateNormal();return e},e.flip=function(){for(var r=0,t=e.polys.length;t>r;r++)e.polys[r].flip();return e},e.calculateTangents=function(){console.log("SQR.Mesh.calculateTangents is not implemented yet!")};var r=function(){var r=e.polys[0],t=e.size,a={aPosition:3};return r.normal&&(a.aNormal=3),r.uvs.length>0&&(a.aUV=2),e.buffer=SQR.Buffer().layout(a,t),e.buffer};e.update=function(){if(0==e.polys.length)return void console.warn("> SQR.Mesh.update > no polys found to create buffer from.");for(var t=e.buffer||r(),a=t.attributes.aPosition,o=0,n=[],i=0,s=e.polys.length;s>i;i++)for(var u=e.polys[i],l=0,c=u.triangles.length;c>l;l++){var f=u.triangles[l],v=e.vertices[u.vertices[f]],a=v.position,p=e.smooth?v.normal:u.normal,d=e.uvs[u.uvs[f]];n.length=0,n.push(a.x,a.y,a.z,p.x,p.y,p.z,d.x,d.y),t.set(null,o,n),o++}return t.update(),t.mesh||(t.mesh=e),t},e.V=e.addVertex,e.F=e.addFace,e.T=e.addUV},SQR.Mesh.fromJSON=function(e,r,t){var a;if(t=t||{},r)a=e[r];else if(e.vertices)a=e;else for(var o in e){a=e[o];break}if(!a)throw"> SQR.Mesh - mesh not found in data (name: "+r+")";var n={aPosition:"vertices",aNormal:"normals",aColor:"colors",aUV:"uv1",aUV2:"uv2",aTangent:"tangent",aWeight:"boneWeights",aIndex:"boneIndices",indices:"tris"},i=function(e){var r=a[e]||a[n[e]];return r&&r.length>0?r:null},s=t.layout||e.layout||SQR.v3n3u2(),u=t.vertexSize||s.aPosition,l=(a.vertices||a.aPosition).length/u,c=SQR.Buffer().layout(s,l);for(var f in s){var o=i(f);o&&c.data(f,o)}var v=i("indices");return v&&c.index(v),SQR.Mesh(c),c.update()},SQR.Primitives.createPlane=function(e,r,t,a,o,n,i){var s,u,i=i||{},e=.5*e,r=.5*r,o=o||0,n=n||0,t=t||1,a=a||1,l=-e+o,c=-r+n,f=2*e/t,v=2*r/a,p=new SQR.Mesh;for(s=0;t+1>s;s++)for(u=0;a+1>u;u++){var d=l+s*f,h=c+u*v;i.zUp?p.V(d,h,0):p.V(d,0,h),p.T(s/t,u/a)}for(s=0;t>s;s++)for(u=0;a>u;u++){var d=l+s*f,h=c+u*v,m=(s+0)*(a+1)+u,S=(s+1)*(a+1)+u;p.F(m,m+1,S,S+1).T(m,m+1,S,S+1)}return p.calculateNormals(i.smooth),i.flip&&p.flip(),p.update()},SQR.Poly=function(e){var r=this;r.mesh=e,r.triangles=[]},SQR.Poly.prototype.addVertices=function(){var e=this;if(e.size=arguments.length,e.size<3)throw"> SQR.Poly.addVertices > A poly needs at least 3 vertices.";e.vertices=[];for(var r=0;r<e.size;r++){var t=arguments[r];e.mesh.vertices[t].addPoly(e),e.vertices.push(t)}return e.size>=3&&e.triangles.push(0,1,2),e.size>=4&&e.triangles.push(2,1,3),e},SQR.Poly.prototype.addUV=function(e,r,t,a){var o=this;return o.uvs=[e,r,t],a&&o.uvs.push(a),o},SQR.Poly.prototype.flip=function(){var e=this,r=this.vertices,t=r[1];r[1]=r[2],r[2]=t,r.normal?r.normal.neg():e.normal?e.normal.neg():console.log("> SQR.Poly.flip > please consider calculating normal first, then flipping")},SQR.Poly.prototype.calculateNormal=function(){var e=this,r=this.vertices,t=e.mesh.vertices,a=SQR.V3.__tv1,o=SQR.V3.__tv2;return e.normal=e.normal||new SQR.V3,a.sub(t[r[0]].position,t[r[1]].position),a.isZero()&&e.size>3&&a.sub(t[r[0]].position,t[r[3]].position),o.sub(t[r[2]].position,t[r[0]].position),e.normal.cross(a,o).norm(),e},SQR.Poly.prototype.V=SQR.Poly.prototype.addVertices,SQR.Poly.prototype.T=SQR.Poly.prototype.addUV,SQR.Primitives.createPostEffect=function(e,r){SQR.fullScreenQuad=SQR.fullScreenQuad||SQR.Buffer().layout(SQR.v2u2(),6).data("aPosition",-1,1,1,1,1,-1,-1,1,1,-1,-1,-1).data("aUV",0,1,1,1,1,0,0,1,1,0,0,0).update();var t=new SQR.Transform("post-effect");return t.buffer=SQR.fullScreenQuad,t.shader=SQR.Shader(e,r),t},SQR.SceneParser=function(){var e=function(){return{aPosition:3,aNormal:3,aUV:2,aWeight:4,aIndex:4}},r=function(e,r){r.x=e[0],r.y=e[1],r.z=e[2],r.w&&(r.w=e[3])};return{parse:function(t,a){a=a||{};var o=a.prefix||"",n=t[o+"scene"],i=t[o+"mesh"],s=t[o+"anim"];if(a.context){var u=n.background;a.context.clearColor(u.r,u.g,u.b)}var l=function(){var e;return function(){return e||(e=a.shader.setUniform?a.shader:SQR.Shader(a.shader)),e}}();SQR.flipMatrix=a&&a.flipMatrix?a.flipMatrix:!1;var c={},f={},v=[],p={};for(var d in i){var h=i[d],m=h.boneWeights?e():SQR.v3n3u2(),S=SQR.Mesh.fromJSON(h,null,{layout:m});c[d]=S,f[h.name]=S}for(var Q in n.materials){var R=n.materials[Q];R.color=SQR.Color().setRGB(R.color.r,R.color.g,R.color.b)}var y,V=new SQR.Transform,g=n.transforms;g.forEach(function(e){var t=new SQR.Transform(e.name,e.uid);if(t.useQuaternion=!0,r(e.position,t.position),r(e.rotation,t.quaternion),e.scale&&r(e.scale,t.scale),t.data=e,e.bones&&v.push(t),e.camera){y=t;var a=n.cameras[e.camera],o=function(){var e=window.innerWidth,r=window.innerHeight,t=e/r;y.projection=(new SQR.ProjectionMatrix).perspective(a.fov,t,a.near,a.far)};window.addEventListener("resize",o),o()}e.mesh&&(t.buffer=c[e.meshId]),e.renderer&&(e.bones||(t.shader=l()),t.uniforms=t.uniforms||{},t.uniforms.uColor=n.materials[e.renderer].color),e.parent?V.findById(e.parent).add(t):V.add(t)}),v.forEach(function(e){var r=e.data.bones,t=[],o=r.length;r.forEach(function(e){t.push(V.findById(e))}),t[0].setAsBoneRoot();var n=[];e.shader=SQR.Shader(a.shader,{directives:[{name:"NUM_BONES",value:o},{name:"BONE_PER_VERTEX",value:4}]}),e.beforeDraw=function(){for(var r=0;o>r;r++)n[r]=t[r].computeBoneMatrix();e.shader.use().setUniform("uBones",n)}});for(var w in s){var b=s[w];p[w]={duration:b.length,transforms:{}};for(var F in b.curves){p[w].transforms[F]={properties:{}};for(var P in b.curves[F]){var x=[],M=b.curves[F][P];if(a.linearAnimation)for(var N=0;N<M.keys.length;N+=4){var T=M.keys[N+0],S=M.keys[N+1];x.push(new SQR.V2(T,S))}else for(var N=0;N<M.keys.length-4;N+=4){var _=M.keys[N+0],B=M.keys[N+1],U=M.keys[N+3],z=M.keys[N+4],I=M.keys[N+5],C=M.keys[N+6],k=new SQR.V2(_,B),E=new SQR.V2(z,I),A=(E.x-k.x)/3,W=new SQR.V2(A,A*U).add(k),O=new SQR.V2(-A,-A*C).add(E);x.push(new SQR.Bezier(k,W,O,E))}p[w].transforms[F].properties[P]=x}}}return V.recurse(function(e){if(e.data&&e.data.animationId){var r=e.data.animationId,t=p[r];if(!t)return;e.animation=SQR.Animation(t.duration);for(var o in t.transforms){var n=e.findByPath(o);n.clip=SQR.Clip(t.duration),e.animation.addClip(n.clip);for(var i in t.transforms[o].properties)n.clip.addProperty(i,t.transforms[o].properties[i])}a.autoPlay&&e.animation.play()}},!0),{root:V,camera:y,buffers:f}}}}(),SQR.Primitives.createSphere=function(e,r,t,a){var o=new SQR.Mesh;e=e||50,r=Math.max(3,Math.floor(r)||8),t=Math.max(3,Math.floor(t)||6),a=a||{};var n,i,s=0,u=2*Math.PI,l=0,c=Math.PI;for(i=1;t-1>=i;i++)for(n=0;r>n;n++){{var f=n/r,v=i/t,p=-e*Math.cos(s+f*u)*Math.sin(l+v*c),d=e*Math.cos(l+v*c),h=e*Math.sin(s+f*u)*Math.sin(l+v*c);o.V(p,d,h)}o.T(f,1-v)}var m=o.V(0,e,0),S=o.V(0,-e,0);for(o.T(1,1),o.T(0,0),i=0;t>i;i++){var Q=0==i,R=i==t-1;for(n=0;r>n;n++){var y=i,V=i+1,g=n,w=(n+1)%r,b=y*r+g-r;Q&&(b=m);var F=y*r+w-r;Q&&(F=m);var P=V*r+g-r;R&&(P=S);var x=V*r+w-r;R&&(x=S),Q?o.F(b,x,P).T(b,x,P):R?o.F(b,F,x).T(b,F,x):o.F(b,F,P,x).T(b,F,P,x)}}return o.calculateNormals(a.smooth),a.flip&&o.flip(),o.update()},SQR.Vertex=function(e,r,t){var a=this;a.position=new SQR.V3(e,r,t),a.normal=new SQR.V3},SQR.Vertex.prototype.addPoly=function(e){var r=this;r.polys=r.polys||[],r.polys.push(e)},SQR.Vertex.prototype.calculateNormal=function(){var e=this;e.normal.set();for(var r=0,t=e.polys.length;t>r;r++)e.normal.add(e.polys[r].normal);e.normal.norm()};