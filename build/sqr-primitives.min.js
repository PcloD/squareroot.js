SQR.Primitives.createCube=function(e,r,a,t){var n=this.V2,o=this.V3,i=this.F(t);e=e||1,r=r||1,a=a||1;var s=SQR.Buffer().layout(SQR.v3n3u2(),36),u=o(e*-.5,.5*r,.5*a),c=o(.5*e,.5*r,.5*a),f=o(e*-.5,r*-.5,.5*a),l=o(.5*e,r*-.5,.5*a),v=o(e*-.5,.5*r,a*-.5),m=o(.5*e,.5*r,a*-.5),d=o(e*-.5,r*-.5,a*-.5),S=o(.5*e,r*-.5,a*-.5),h=n(0,1),Q=n(1,1),R=n(0,0),p=n(1,0);return i(u,c,f,l).uv(h,Q,R,p),i(m,v,S,d).uv(h,Q,R,p),i(v,u,d,f).uv(h,Q,R,p),i(c,m,l,S).uv(h,Q,R,p),i(v,m,u,c).uv(h,Q,R,p),i(f,l,d,S).uv(h,Q,R,p),i.toBuffer(s),s.update()},SQR.Primitives.createCylinder=function(e,r,a,t){t=t||{};var n,o,i,s,u,c,f=[],l=function(e,r,a,t,n,o,i,s){var u=(new SQR.Face).setPosition(e,r,a,t).setUV(n,o,i,s);f.push(u)};n=[],o=[],i=[],s=[];for(var v=0;a>v;v++){var m=new SQR.V3,d=new SQR.V3,S=new SQR.V2,h=new SQR.V2,Q=Math.cos(v/a*SQR.TWOPI)*r,R=Math.sin(v/a*SQR.TWOPI)*r;t.vertical?(m.set(R,e*-.5,Q),d.set(R,.5*e,Q)):(m.set(e*-.5,Q,R),d.set(.5*e,Q,R)),S.set(v/a,0),h.set(v/a,1),t.noCaps||(t.vertical?(u=new SQR.V3(0,e*-.5,0),c=new SQR.V3(0,.5*e,0)):(u=new SQR.V3(e*-.5,0,0),c=new SQR.V3(.5*e,0,0))),n.push(m),o.push(d),i.push(S),s.push(h),t.insideFaces&&(m._inside=m.clone(),d._inside=d.clone())}for(var v=0;a>v;v++){var p=n[v],y=o[v],w=i[v],V=s[v],b=(v+1)%a,g=n[b],F=o[b],P=i[b],x=s[b];if(t.heightSegments=t.heightSegments||t.hs||0,t.heightSegments)for(var N=(new SQR.V3).sub(y,p),M=(new SQR.V3).sub(F,g),_=(new SQR.V3).copyFrom(p),B=(new SQR.V3).copyFrom(g),U=new SQR.V3,I=new SQR.V3,b=t.heightSegments,E=0;b+1>E;E++)U.copyFrom(N).mul(1/b*E).add(p,U),I.copyFrom(M).mul(1/b*E).add(g,I),l(_.clone(),U.clone(),B.clone(),I.clone(),w,V,P,x),_.copyFrom(U),B.copyFrom(I);else l(p,y,g,F,w,V,P,x),t.noCaps&&t.insideFaces&&l(p._inside,g._inside,y._inside,F._inside,w,V,P,x);t.noCaps||(l(p,g,u,null,V,x,P),l(F,y,c,null,x,V,P))}var m,C=t.layout||{aPosition:3,aNormal:3,aUV:2},k=SQR.Buffer().layout(C,6*f.length),T=0;return f.forEach(function(e){T+=e.calculateNormal().toBuffer(k,T)}),k},SQR.Extrude=function(){var e={};e.buffer=SQR.Buffer();var r,a,t,n,o,i,s,u=[],c=[];e.setPaths=function(o,i,s,u){return r=o,a=o.length,t=i,n=s||10,f(u),e},e.makeCaps=function(){return e};var f=function(r){u.length=0,c.length=0,r=r||SQR.v3n3();for(var t=0;n>t;t++)for(var o=0;a>o;o++){var i=new SQR.V3;u.push(i)}for(var t=0;n-1>t;t++)for(var o=0;a>o;o++){var s=t*a+o,f=a-1>o?s+1:t*a,l=(t+1)*a+o,v=a-1>o?l+1:(t+1)*a,m=(new SQR.Face).setPosition(u[s],u[v],u[f]),d=(new SQR.Face).setPosition(u[s],u[l],u[v]);c.push(m,d)}e.buffer.layout(r,3*c.length)},l=function(s,f){for(var l=0;n>l;l++)for(var v=l/(n-1),m=i+v*o,d=t.matrixAt(m),S=0;a>S;S++){var h=u[l*a+S];h.copyFrom(r[S]),s&&s(v,h,e),d.transformVector(h),f&&f(v,h,e)}for(var Q=0,l=0,R=c.length;R>l;l++)Q+=c[l].calculateNormal().toBuffer(e.buffer,Q,!1,!0)};return e.update=function(r,a,t,n){return i=r||0,s=a||1,o=s-i,l(t,n),e.buffer.update(),e},e},SQR.Face=function(){return this instanceof SQR.Face?void 0:new SQR.Face},SQR.Face.prototype.setPosition=function(e,r,a,t){var n=this;return n.a=e||new SQR.V3,n.b=r||new SQR.V3,n.c=a||new SQR.V3,n.d=t,n},SQR.Face.prototype.setIndex=function(e,r,a,t,n){var o=this;return o.indexed=!0,o.ia=r,o.ib=a,o.ic=t,o.id=n,o.vertexArray=e,o},SQR.Face.prototype.flip=function(){var e=this,r=e.b;e.b=e.c,e.c=r},SQR.Face.prototype.setNormal=function(e){return this.normal=e,this},SQR.Face.prototype.setUV=function(e,r,a,t){var n=this;return n.uva=e,n.uvb=r,n.uvc=a,n.uvd=t,n},SQR.Face.prototype.setColor=function(e,r,a,t){var n=this;return n.ca=e,n.cb=r,n.cc=a,n.cd=t,n},SQR.Face.prototype.calculateNormal=function(){var e=this,r=SQR.V3.__tv1,a=SQR.V3.__tv2,t=e.vertexArray;return e.normal=e.normal||new SQR.V3,e.indexed?(r.sub(t[e.ia],t[e.ib]),r.isZero()&&r.sub(t[e.ia],t[e.id]),a.sub(t[e.ic],t[e.ia])):(r.sub(e.a,e.b),r.isZero()&&r.sub(e.a,e.d),a.sub(e.c,e.a)),e.normal.cross(r,a),e},SQR.Face.prototype.v=SQR.Face.prototype.setPosition,SQR.Face.prototype.i=SQR.Face.prototype.setIndex,SQR.Face.prototype.n=SQR.Face.prototype.setNormal,SQR.Face.prototype.uv=SQR.Face.prototype.setUV,SQR.Face.prototype.cl=SQR.Face.prototype.setColor,SQR.Face.prototype.cn=SQR.Face.prototype.calculateNormal,SQR.Face.prototype.addNormalToVertices=function(){var e=this,r=e.vertexArray,a=e.indexed?r[e.ia]:e.a,t=e.indexed?r[e.ib]:e.b,n=e.indexed?r[e.ic]:e.c,o=e.indexed?r[e.id]:e.d;return a.addNormal(e.normal),t.addNormal(e.normal),n.addNormal(e.normal),o&&o.addNormal(e.normal),e},SQR.Face.prototype.toBuffer=function(e,r,a,t){var n=this,o="aPosition",i="aNormal",s="aUV",u=r;if(e.attributes[o]&&(e.set(o,u+0,n.a).set(o,u+1,n.b).set(o,u+2,n.c),n.d&&e.set(o,u+3,n.c).set(o,u+4,n.b).set(o,u+5,n.d)),e.attributes[i]&&(n.normal||a)){var c=a,f=n.normal;t&&!c&&n.normal.norm(),e.set(i,u+0,c?n.a.normal:f).set(i,u+1,c?n.b.normal:f).set(i,u+2,c?n.c.normal:f),n.d&&e.set(i,u+3,c?n.c.normal:f).set(i,u+4,c?n.b.normal:f).set(i,u+5,c?n.d.normal:f)}return e.attributes[s]&&n.uva&&(e.set(s,u+0,n.uva).set(s,u+1,n.uvb).set(s,u+2,n.uvc),n.d&&e.set(s,u+3,n.uvc).set(s,u+4,n.uvb).set(s,u+5,n.uvd)),n.d?6:3},SQR.Primitives.createIcosphere=function(e,r,a){var t=[],n=[],o=[],i=0;a=a||{};var s=[[1,0,0,1],[0,1,0,2],[0,0,1,3],[1,1,0,4],[0,1,1,5]],u=new SQR.V3,c=(new SQR.V3(0,1,0),new SQR.V3(0,0,1),function(e){var r,a;return u.copyFrom(e),u.norm(),r=1-(.5+Math.atan2(u.z,u.x)/SQR.TWOPI),a=1-(.5-Math.asin(u.y)/Math.PI),new SQR.V2(r,a)}),f=function(e,r,a,n,o,i){var s=c(e),u=c(r),f=c(a),l=(new SQR.Face).setPosition(e,r,a).setUV(s,u,f).setColor(n,o,i);t.push(l)},l=function(r,a){for(var t=n.length,o=0;t>o;o++){var i=n[o],s=i.__v1==r&&i.__v2==a,u=i.__v2==r&&i.__v1==a;if(s||u)return i}var c=new SQR.V3;return c.sub(r,a).mul(.5).add(c,a).norm().mul(e),c.__v1=r,c.__v2=a,n.push(c),c.normal=c.clone(),c},v=function(){o[i]={};var e=o[i];e.faces=t,e.vectors=n,t=[];for(var r=e.faces.length,a=0;r>a;a++){var u=e.faces[a],c=l(u.a,u.b),v=l(u.a,u.c),m=l(u.b,u.c),d=s[i+1];f(u.a,c,v,u.ca,d,d),f(u.b,m,c,u.cb,d,d),f(u.c,v,m,u.cc,d,d),f(c,m,v,d,d,d)}i++},m=e,d=.5*(1+Math.sqrt(5))*m,S=function(r,t,o){var i=new SQR.V3(r,t,o).norm();i.normal=i.clone(),a.reverseNormals&&i.normal.neg(),i.mul(e),n.push(i)},h=function(e,r,a){var t=s[0];f(n[e],n[a],n[r],t,t,t)};for(S(-m,d,0),S(m,d,0),S(-m,-d,0),S(m,-d,0),S(0,-m,d),S(0,m,d),S(0,-m,-d),S(0,m,-d),S(d,0,-m),S(d,0,m),S(-d,0,-m),S(-d,0,m),h(0,11,5),h(0,5,1),h(0,1,7),h(0,7,10),h(0,10,11),h(1,5,9),h(5,11,4),h(11,10,2),h(10,7,6),h(7,1,8),h(3,9,4),h(3,4,2),h(3,2,6),h(3,6,8),h(3,8,9),h(4,9,5),h(2,4,11),h(6,2,10),h(8,6,7),h(9,8,1);r-->0;)v();var d,Q=SQR.Buffer().layout({aPosition:3,aNormal:3,aUV:2},3*t.length),R=0;return t.forEach(function(e){a.flatShading&&e.calculateNormal(),R+=e.toBuffer(Q,R,!a.flatShading)}),Q},SQR.Mesh=function(e){var r={};return e.mesh=r,r},SQR.Mesh.fromJSON=function(e,r,a){var t;if(a=a||{},r)t=e[r];else if(e.vertices)t=e;else for(var n in e){t=e[n];break}if(!t)throw"> SQR.Mesh - mesh not found in data (name: "+r+")";var o={aPosition:"vertices",aNormal:"normals",aColor:"colors",aUV:"uv1",aUV2:"uv2",aTangent:"tangent",aWeight:"boneWeights",aIndex:"boneIndices",indices:"tris"},i=function(e){var r=t[e]||t[o[e]];return r&&r.length>0?r:null},s=a.layout||e.layout||SQR.v3n3u2(),u=a.vertexSize||s.aPosition,c=(t.vertices||t.aPosition).length/u,f=SQR.Buffer().layout(s,c);for(var l in s){var n=i(l);n&&f.data(l,n)}var v=i("indices");return v&&f.index(v),SQR.Mesh(f),f.update()},SQR.Primitives.createPlane=function(e,r,a,t,n,o,i){var s=[],u=[],c=new SQR.Buffer,i=i||{};c.width=e,c.height=r;var e=.5*e,r=.5*r,n=n||0,o=o||0,a=a||1,t=t||1;s.length=[];var f,l,v=-e+n,m=-r+o,d=c.width/a,S=c.height/t,h=[],Q=[];for(f=0;a+1>f;f++)for(l=0;t+1>l;l++){var R=v+f*d,p=m+l*S,y=f*(t+1)+l;Q[y]=new SQR.V2(f/a,l/t),h[y]=i.zUp?new SQR.V3(R,p,0):new SQR.V3(R,0,p)}for(f=0;a>f;f++)for(l=0;t>l;l++){var R=v+f*d,p=m+l*S,y=f*(t+1)+l,w=(f+1)*(t+1)+l,V=(new SQR.Face).setIndex(h,y,y+1,w,w+1);s.push(V),u.push(y,y+1,w,w,y+1,w+1)}layout=i.layout?i.layout:{},layout.aPosition=3,layout.aNormal=3,layout.aUV=2,c.layout(layout,h.length),c.faces=s,c.vertices=h;var b,g,F,P=function(e){e.resetNormal()},x=function(e){e.calculateNormal(),e.addNormalToVertices()},N=function(e,r,a){var t=h[a],n=Q[a];r[e+0+b]=t.x,r[e+1+b]=t.y,r[e+2+b]=t.z,r[e+0+g]=t.normal.x,r[e+1+g]=t.normal.y,r[e+2+g]=t.normal.z,r[e+0+F]=n.x,r[e+1+F]=n.y};return c.recalculateNormals=function(){return h.forEach(P),s.forEach(x),c},c.updateFromFaces=function(e){return b=c.attributes.aPosition.offset,g=c.attributes.aNormal.offset,F=c.attributes.aUV.offset,c.iterate(null,N),e&&c.index(u),c},c.recalculateNormals().updateFromFaces(!0).update()},SQR.Primitives.createPostEffect=function(e,r){SQR.fullScreenQuad=SQR.fullScreenQuad||SQR.Buffer().layout(SQR.v2u2(),6).data("aPosition",-1,1,1,1,1,-1,-1,1,1,-1,-1,-1).data("aUV",0,1,1,1,1,0,0,1,1,0,0,0).update();var a=new SQR.Transform("post-effect");return a.buffer=SQR.fullScreenQuad,a.shader=SQR.Shader(e,r),a},SQR.SceneParser=function(){var e=function(){return{aPosition:3,aNormal:3,aUV:2,aWeight:4,aIndex:4}},r=function(e,r){r.x=e[0],r.y=e[1],r.z=e[2],r.w&&(r.w=e[3])};return{parse:function(a,t){t=t||{};var n=t.prefix||"",o=a[n+"scene"],i=a[n+"mesh"],s=a[n+"anim"];if(t.context){var u=o.background;t.context.clearColor(u.r,u.g,u.b)}var c=function(){var e;return function(){return e||(e=SQR.Shader(t.shader)),e}}();SQR.flipMatrix=t&&t.flipMatrix?t.flipMatrix:!1;var f={},l={},v=[],m={};for(var d in i){var S=i[d],h=S.boneWeights?e():SQR.v3n3u2(),Q=SQR.Mesh.fromJSON(S,null,{layout:h});f[d]=Q,l[S.name]=Q}for(var R in o.materials){var p=o.materials[R];p.color=SQR.Color().setRGB(p.color.r,p.color.g,p.color.b)}var y,w=new SQR.Transform,V=o.transforms;V.forEach(function(e){var a=new SQR.Transform(e.name,e.uid);if(a.useQuaternion=!0,r(e.position,a.position),r(e.rotation,a.quaternion),a.data=e,e.bones&&v.push(a),e.camera){y=a;var t=o.cameras[e.camera],n=function(){var e=window.innerWidth,r=window.innerHeight,a=e/r;y.projection=(new SQR.ProjectionMatrix).perspective(t.fov,a,t.near,t.far)};window.addEventListener("resize",n),n()}e.mesh&&(a.buffer=f[e.meshId]),e.renderer&&(e.bones||(a.shader=c()),a.uniforms=a.uniforms||{},a.uniforms.uColor=o.materials[e.renderer].color),e.parent?w.findById(e.parent).add(a):w.add(a)}),v.forEach(function(e){var r=e.data.bones,a=[],n=r.length;r.forEach(function(e){a.push(w.findById(e))}),a[0].setAsBoneRoot();var o=[];e.shader=SQR.Shader(t.shader,{directives:[{name:"NUM_BONES",value:n},{name:"BONE_PER_VERTEX",value:4}]}),e.beforeDraw=function(){for(var r=0;n>r;r++)o[r]=a[r].computeBoneMatrix();e.shader.use().setUniform("uBones",o)}});for(var b in s){var g=s[b];m[b]={duration:g.length,transforms:{}};for(var F in g.curves){m[b].transforms[F]={properties:{}};for(var P in g.curves[F]){var x=[],N=g.curves[F][P];if(t.linearAnimation)for(var M=0;M<N.keys.length;M+=4){var _=N.keys[M+0],Q=N.keys[M+1];x.push(new SQR.V2(_,Q))}else for(var M=0;M<N.keys.length-4;M+=4){var B=N.keys[M+0],U=N.keys[M+1],I=N.keys[M+3],E=N.keys[M+4],C=N.keys[M+5],k=N.keys[M+6],T=new SQR.V2(B,U),z=new SQR.V2(E,C),W=(z.x-T.x)/3,A=new SQR.V2(W,W*I).add(T),O=new SQR.V2(-W,-W*k).add(z);x.push(new SQR.Bezier(T,A,O,z))}m[b].transforms[F].properties[P]=x}}}return w.recurse(function(e){if(e.data&&e.data.animationId){var r=e.data.animationId,a=m[r];if(!a)return;e.animation=SQR.Animation(a.duration);for(var n in a.transforms){var o=e.findByPath(n);o.clip=SQR.Clip(a.duration),e.animation.addClip(o.clip);for(var i in a.transforms[n].properties)o.clip.addProperty(i,a.transforms[n].properties[i])}t.autoPlay&&e.animation.play()}},!0),{root:w,camera:y,buffers:l}}}}(),SQR.Primitives.createSphere=function(e,r,a,t){var n=[],o=[],i=[];t=t||{};var s,u,e=e||50,c=Math.max(3,Math.floor(r)||8),f=Math.max(3,Math.floor(a)||6),l=0,v=2*Math.PI,m=0,d=Math.PI;for(u=0;f>=u;u++)for(s=0;c>=s;s++){var S=s/c,h=u/f,Q=-e*Math.cos(l+S*v)*Math.sin(m+h*d),R=e*Math.cos(m+h*d),p=e*Math.sin(l+S*v)*Math.sin(m+h*d);n.push(new SQR.V3(Q,R,p)),o.push(new SQR.V2(S,1-h))}for(u=0;f>u;u++)for(s=0;c>s;s++){var y,w=c+1,V=n[u*w+s+0],b=n[u*w+s+1],g=n[(u+1)*w+s+1],F=n[(u+1)*w+s+0],P=o[u*w+s+0],x=o[u*w+s+1],N=o[(u+1)*w+s+1],M=o[(u+1)*w+s+0];y=t.reverseNormals?(new SQR.Face).setPosition(b,V,g,F).setUV(x,P,N,M):(new SQR.Face).setPosition(V,b,F,g).setUV(P,x,M,N),t.flatShading?y.calculateNormal():(V.normal=V.clone().norm(),b.normal=b.clone().norm(),g.normal=g.clone().norm(),F.normal=F.clone().norm(),t.reverseNormals&&(V.normal.neg(),b.normal.neg(),g.normal.neg(),F.normal.neg())),i.push(y)}var _=SQR.Buffer().layout({aPosition:3,aNormal:3,aUV:2},6*i.length),B=0;return i.forEach(function(e){B+=e.toBuffer(_,B,!t.flatShading)}),_.update()};